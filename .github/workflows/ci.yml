name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Restrict permissions to only what's needed
permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install cargo-audit (cached or binary install)
      run: |
        if ! command -v cargo-audit &> /dev/null; then
          echo "Installing cargo-audit..."
          # Try to download pre-built binary for faster installation
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            wget -q https://github.com/rustsec/rustsec/releases/download/cargo-audit%2Fv0.17.6/cargo-audit-x86_64-unknown-linux-gnu.tar.gz
            tar xf cargo-audit-x86_64-unknown-linux-gnu.tar.gz
            mv cargo-audit-x86_64-unknown-linux-gnu/cargo-audit ~/.cargo/bin/
          else
            # Fall back to building from source
            cargo install cargo-audit --locked
          fi
        else
          echo "cargo-audit is already installed"
        fi
    
    - name: Security audit
      run: cargo audit
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
      
    - name: Build
      run: cargo build --verbose